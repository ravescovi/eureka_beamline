Directory Structure:

└── ./
    └── simDetectorApp
        ├── Db
        │   └── simDetector.template
        └── op
            └── adl
                └── simDetector.adl



---
File: /simDetectorApp/Db/simDetector.template
---

#=================================================================#
# Template file: simDetector.template
# Database for the records specific to the simulated detector driver
# Mark Rivers
# March 23, 2008

include "ADBase.template"

# Redefine the color mode choices from ADBase.template to only have those that the simDetector
# driver supports.  Keep the same values (xxVL), but change the menu numbers.

record(mbbo, "$(P)$(R)ColorMode")
{
   field(ZRST, "Mono")
   field(ZRVL, "0")
   field(ONST, "RGB1")
   field(ONVL, "2")
   field(TWST, "RGB2")
   field(TWVL, "3")
   field(THST, "RGB3")
   field(THVL, "4")
   field(FRST, "")
   field(FVST, "")
   field(SXST, "")
   field(SVST, "")
   field(EIST, "")
}

record(mbbi, "$(P)$(R)ColorMode_RBV")
{
   field(ZRST, "Mono")
   field(ZRVL, "0")
   field(ONST, "RGB1")
   field(ONVL, "2")
   field(TWST, "RGB2")
   field(TWVL, "3")
   field(THST, "RGB3")
   field(THVL, "4")
   field(FRST, "")
   field(FVST, "")
   field(SXST, "")
   field(SVST, "")
   field(EIST, "")
}


# New records for simulation detector
record(ao, "$(P)$(R)GainX")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_X")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainX_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_X")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainY")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_Y")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainY_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_Y")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainRed")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_RED")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainRed_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_RED")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainGreen")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_GREEN")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainGreen_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_GREEN")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainBlue")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_BLUE")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)GainBlue_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_GAIN_BLUE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)Reset")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RESET_IMAGE")
}

record(longin, "$(P)$(R)Reset_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))RESET_IMAGE")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)Offset")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_OFFSET")
   field(PREC, "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)Offset_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_OFFSET")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)Noise")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_NOISE")
   field(PREC, "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)Noise_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_NOISE")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)SimMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_MODE")
   field(ZRST, "LinearRamp")
   field(ZRVL, "0")
   field(ONST, "Peaks")
   field(ONVL, "1")
   field(TWST, "Sine")
   field(TWVL, "2")
   field(THST, "Offset&Noise")
   field(THVL, "3")
   info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)SimMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_MODE")
   field(ZRST, "LinearRamp")
   field(ZRVL, "0")
   field(ONST, "Peaks")
   field(ONVL, "1")
   field(TWST, "Sine")
   field(TWVL, "2")
   field(THST, "Offset&Noise")
   field(THVL, "3")
   field(SCAN, "I/O Intr")
}

# Records for peak simulation mode
record(longout, "$(P)$(R)PeakStartX")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_START_X")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakStartX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_START_X")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakStartY")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_START_Y")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakStartY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_START_Y")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakNumX")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_NUM_X")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakNumX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_NUM_X")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakNumY")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_NUM_Y")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakNumY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_NUM_Y")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakStepX")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_STEP_X")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakStepX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_STEP_X")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakStepY")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_STEP_Y")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakStepY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_STEP_Y")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakWidthX")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_WIDTH_X")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakWidthX_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_WIDTH_X")
   field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)PeakWidthY")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_WIDTH_Y")
   info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)PeakWidthY_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_WIDTH_Y")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)PeakVariation")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_HEIGHT_VARIATION")
   field(PREC, "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)PeakVariation_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_PEAK_HEIGHT_VARIATION")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
}

# Records for sine wave simulation mode
record(mbbo, "$(P)$(R)XSineOperation")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE_OPERATION")
   field(ZRST, "Add")
   field(ZRVL, "0")
   field(ONST, "Multiply")
   field(ONVL, "1")
   info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)XSineOperation_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE_OPERATION")
   field(ZRST, "LinearRamp")
   field(ZRST, "Add")
   field(ZRVL, "0")
   field(ONST, "Multiply")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine1Amplitude")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_AMPLITUDE")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine1Amplitude_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_AMPLITUDE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine1Frequency")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_FREQUENCY")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine1Frequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_FREQUENCY")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine1Phase")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_PHASE")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine1Phase_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE1_PHASE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine2Amplitude")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_AMPLITUDE")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine2Amplitude_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_AMPLITUDE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine2Frequency")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_FREQUENCY")
   field(PREC, "2")
   field(VAL,  "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine2Frequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_FREQUENCY")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)XSine2Phase")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_PHASE")
   field(PREC, "2")
   field(VAL,  "90")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)XSine2Phase_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_XSINE2_PHASE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)YSineOperation")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE_OPERATION")
   field(ZRST, "Add")
   field(ZRVL, "0")
   field(ONST, "Multiply")
   field(ONVL, "1")
   info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)YSineOperation_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE_OPERATION")
   field(ZRST, "LinearRamp")
   field(ZRST, "Add")
   field(ZRVL, "0")
   field(ONST, "Multiply")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine1Amplitude")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_AMPLITUDE")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine1Amplitude_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_AMPLITUDE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine1Frequency")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_FREQUENCY")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine1Frequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_FREQUENCY")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine1Phase")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_PHASE")
   field(PREC, "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine1Phase_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE1_PHASE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine2Amplitude")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_AMPLITUDE")
   field(PREC, "2")
   field(VAL,  "1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine2Amplitude_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_AMPLITUDE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine2Frequency")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_FREQUENCY")
   field(PREC, "2")
   field(VAL,  "2")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine2Frequency_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_FREQUENCY")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)YSine2Phase")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_PHASE")
   field(PREC, "2")
   field(VAL,  "90")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)YSine2Phase_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SIM_YSINE2_PHASE")
   field(PREC, "2")
   field(SCAN, "I/O Intr")
}




---
File: /simDetectorApp/op/adl/simDetector.adl
---


file {
	name="/home/epics/devel/areaDetector-3-8/ADSimDetector/simDetectorApp/op/adl/simDetector.adl"
	version=030109
}
display {
	object {
		x=794
		y=75
		width=715
		height=945
	}
	clr=14
	bclr=4
	cmap=""
	gridSpacing=5
	gridOn=0
	snapToGrid=0
}
"color map" {
	ncolors=65
	colors {
		ffffff,
		ececec,
		dadada,
		c8c8c8,
		bbbbbb,
		aeaeae,
		9e9e9e,
		919191,
		858585,
		787878,
		696969,
		5a5a5a,
		464646,
		2d2d2d,
		000000,
		00d800,
		1ebb00,
		339900,
		2d7f00,
		216c00,
		fd0000,
		de1309,
		be190b,
		a01207,
		820400,
		5893ff,
		597ee1,
		4b6ec7,
		3a5eab,
		27548d,
		fbf34a,
		f9da3c,
		eeb62b,
		e19015,
		cd6100,
		ffb0ff,
		d67fe2,
		ae4ebc,
		8b1a96,
		610a75,
		a4aaff,
		8793e2,
		6a73c1,
		4d52a4,
		343386,
		c7bb6d,
		b79d5c,
		a47e3c,
		7d5627,
		58340f,
		99ffff,
		73dfff,
		4ea5f9,
		2a63e4,
		0a00b8,
		ebf1b5,
		d4db9d,
		bbc187,
		a6a462,
		8b8239,
		73ff6b,
		52da3b,
		3cb420,
		289315,
		1a7309,
	}
}
rectangle {
	object {
		x=0
		y=4
		width=715
		height=25
	}
	"basic attribute" {
		clr=2
	}
}
text {
	object {
		x=0
		y=5
		width=715
		height=25
	}
	"basic attribute" {
		clr=54
	}
	textix="Simulation Detector - $(P)$(R)"
	align="horiz. centered"
}
composite {
	object {
		x=5
		y=35
		width=350
		height=340
	}
	"composite name"=""
	"composite file"="ADSetup.adl"
}
composite {
	object {
		x=5
		y=465
		width=350
		height=380
	}
	"composite name"=""
	"composite file"="ADReadout.adl"
}
composite {
	object {
		x=360
		y=665
		width=350
		height=110
	}
	"composite name"=""
	"composite file"="ADAttrFile.adl"
}
composite {
	object {
		x=360
		y=35
		width=350
		height=165
	}
	"composite name"=""
	"composite file"="ADShutter.adl"
}
composite {
	object {
		x=5
		y=380
		width=350
		height=80
	}
	"composite name"=""
	"composite file"="ADPlugins.adl"
}
composite {
	object {
		x=360
		y=780
		width=350
		height=160
	}
	"composite name"=""
	"composite file"="ADBuffers.adl"
}
composite {
	object {
		x=66
		y=867
		width=238
		height=20
	}
	"composite name"=""
	children {
		text {
			object {
				x=66
				y=867
				width=160
				height=20
			}
			"basic attribute" {
				clr=14
			}
			textix="Simulation setup"
			align="horiz. right"
		}
		"related display" {
			object {
				x=234
				y=867
				width=70
				height=20
			}
			display[0] {
				label="Simulation setup"
				name="simDetectorSetup.adl"
				args="P=$(P),R=$(R)"
			}
			clr=14
			bclr=51
		}
	}
}
rectangle {
	object {
		x=360
		y=205
		width=350
		height=455
	}
	"basic attribute" {
		clr=14
		fill="outline"
	}
}
text {
	object {
		x=405
		y=235
		width=130
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Exposure time"
	align="horiz. right"
}
"text entry" {
	object {
		x=540
		y=235
		width=60
		height=20
	}
	control {
		chan="$(P)$(R)AcquireTime"
		clr=14
		bclr=51
	}
	limits {
	}
}
"text update" {
	object {
		x=605
		y=236
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)AcquireTime_RBV"
		clr=54
		bclr=4
	}
	limits {
	}
}
text {
	object {
		x=395
		y=260
		width=140
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Acquire period"
	align="horiz. right"
}
"text entry" {
	object {
		x=540
		y=260
		width=60
		height=20
	}
	control {
		chan="$(P)$(R)AcquirePeriod"
		clr=14
		bclr=51
	}
	limits {
	}
}
"text update" {
	object {
		x=605
		y=261
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)AcquirePeriod_RBV"
		clr=54
		bclr=4
	}
	limits {
	}
}
text {
	object {
		x=455
		y=285
		width=80
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="# Images"
	align="horiz. right"
}
"text entry" {
	object {
		x=540
		y=285
		width=60
		height=20
	}
	control {
		chan="$(P)$(R)NumImages"
		clr=14
		bclr=51
	}
	limits {
	}
}
"text update" {
	object {
		x=605
		y=286
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)NumImages_RBV"
		clr=54
		bclr=4
	}
	limits {
	}
}
"text update" {
	object {
		x=605
		y=311
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)NumImagesCounter_RBV"
		clr=54
		bclr=4
	}
	limits {
	}
}
text {
	object {
		x=365
		y=310
		width=170
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="# Images complete"
	align="horiz. right"
}
text {
	object {
		x=415
		y=335
		width=120
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="# Exp./image"
	align="horiz. right"
}
"text entry" {
	object {
		x=540
		y=335
		width=60
		height=20
	}
	control {
		chan="$(P)$(R)NumExposures"
		clr=14
		bclr=51
	}
	limits {
	}
}
"text update" {
	object {
		x=605
		y=336
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)NumExposures_RBV"
		clr=54
		bclr=4
	}
	limits {
	}
}
text {
	object {
		x=583
		y=415
		width=40
		height=20
	}
	"basic attribute" {
		clr=63
	}
	"dynamic attribute" {
		vis="if zero"
		calc="A"
		chan="$(P)$(R)Acquire"
	}
	textix="Done"
	align="horiz. centered"
}
text {
	object {
		x=554
		y=415
		width=100
		height=20
	}
	"basic attribute" {
		clr=30
	}
	"dynamic attribute" {
		vis="if not zero"
		calc="A"
		chan="$(P)$(R)Acquire"
	}
	textix="Collecting"
	align="horiz. centered"
}
"message button" {
	object {
		x=540
		y=435
		width=59
		height=20
	}
	control {
		chan="$(P)$(R)Acquire"
		clr=14
		bclr=51
	}
	label="Start"
	press_msg="1"
}
"message button" {
	object {
		x=607
		y=435
		width=59
		height=20
	}
	control {
		chan="$(P)$(R)Acquire"
		clr=14
		bclr=51
	}
	label="Stop"
	press_msg="0"
}
text {
	object {
		x=465
		y=435
		width=70
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Acquire"
	align="horiz. right"
}
rectangle {
	object {
		x=483
		y=207
		width=105
		height=21
	}
	"basic attribute" {
		clr=2
	}
}
text {
	object {
		x=500
		y=208
		width=70
		height=20
	}
	"basic attribute" {
		clr=54
	}
	textix="Collect"
	align="horiz. centered"
}
text {
	object {
		x=385
		y=360
		width=100
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Image mode"
	align="horiz. right"
}
menu {
	object {
		x=490
		y=360
		width=120
		height=20
	}
	control {
		chan="$(P)$(R)ImageMode"
		clr=14
		bclr=51
	}
}
"text update" {
	object {
		x=615
		y=362
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)ImageMode_RBV"
		clr=54
		bclr=4
	}
	format="string"
	limits {
	}
}
text {
	object {
		x=395
		y=535
		width=140
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Detector state"
	align="horiz. right"
}
"text update" {
	object {
		x=540
		y=535
		width=160
		height=18
	}
	monitor {
		chan="$(P)$(R)DetectorState_RBV"
		clr=54
		bclr=2
	}
	clrmod="alarm"
	format="string"
	limits {
	}
}
text {
	object {
		x=395
		y=560
		width=140
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Time remaining"
	align="horiz. right"
}
"text update" {
	object {
		x=540
		y=561
		width=67
		height=18
	}
	monitor {
		chan="$(P)$(R)TimeRemaining_RBV"
		clr=54
		bclr=4
	}
	limits {
	}
}
"text entry" {
	object {
		x=540
		y=585
		width=60
		height=20
	}
	control {
		chan="$(P)$(R)ArrayCounter"
		clr=14
		bclr=51
	}
	limits {
	}
}
text {
	object {
		x=405
		y=585
		width=130
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Image counter"
	align="horiz. right"
}
"text update" {
	object {
		x=605
		y=586
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)ArrayCounter_RBV"
		clr=54
		bclr=4
	}
	limits {
	}
}
text {
	object {
		x=435
		y=610
		width=100
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Image rate"
	align="horiz. right"
}
"text update" {
	object {
		x=540
		y=611
		width=100
		height=18
	}
	monitor {
		chan="$(P)$(R)ArrayRate_RBV"
		clr=54
		bclr=4
	}
	limits {
	}
}
text {
	object {
		x=365
		y=635
		width=150
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Array callbacks"
	align="horiz. right"
}
menu {
	object {
		x=520
		y=635
		width=90
		height=20
	}
	control {
		chan="$(P)$(R)ArrayCallbacks"
		clr=14
		bclr=51
	}
}
"text update" {
	object {
		x=615
		y=637
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)ArrayCallbacks_RBV"
		clr=54
		bclr=4
	}
	align="horiz. centered"
	format="string"
	limits {
	}
}
text {
	object {
		x=385
		y=460
		width=150
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="# Queued arrays"
	align="horiz. right"
}
"text update" {
	object {
		x=540
		y=461
		width=60
		height=18
	}
	monitor {
		chan="$(P)$(R)NumQueuedArrays"
		clr=54
		bclr=4
	}
	align="horiz. right"
	limits {
	}
}
text {
	object {
		x=365
		y=385
		width=120
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Trigger mode"
	align="horiz. right"
}
menu {
	object {
		x=490
		y=385
		width=120
		height=20
	}
	control {
		chan="$(P)$(R)TriggerMode"
		clr=14
		bclr=51
	}
}
"text update" {
	object {
		x=615
		y=386
		width=80
		height=18
	}
	monitor {
		chan="$(P)$(R)TriggerMode_RBV"
		clr=54
		bclr=4
	}
	format="string"
	limits {
	}
}
text {
	object {
		x=375
		y=485
		width=160
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Wait for plugins"
	align="horiz. right"
}
menu {
	object {
		x=540
		y=485
		width=80
		height=20
	}
	control {
		chan="$(P)$(R)WaitForPlugins"
		clr=14
		bclr=51
	}
}
text {
	object {
		x=415
		y=510
		width=120
		height=20
	}
	"basic attribute" {
		clr=14
	}
	textix="Acquire busy"
	align="horiz. right"
}
"text update" {
	object {
		x=540
		y=511
		width=160
		height=18
	}
	monitor {
		chan="$(P)$(R)AcquireBusy"
		clr=54
		bclr=2
	}
	clrmod="alarm"
	format="string"
	limits {
	}
}

