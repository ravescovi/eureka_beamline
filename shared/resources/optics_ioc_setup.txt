Directory Structure:

└── ./
    ├── optics_iocsh.txt
    ├── settings.iocsh
    └── st.cmd.Linux



---
File: /optics.iocsh
---

### Slits (If not supplied, RELTOCENTER defaults to zero)
dbLoadRecords("$(OPTICS)/opticsApp/Db/2slit.db","P=$(PREFIX),SLIT=Slit1V,mXp=m49,mXn=m50,RELTOCENTER=0")
dbLoadRecords("$(OPTICS)/opticsApp/Db/2slit.db","P=$(PREFIX),SLIT=Slit1H,mXp=m51,mXn=m52,RELTOCENTER=0")

### Optical tables
epicsEnvSet("DIR", "$(OPTICS)/opticsApp/Db")
dbLoadRecords("$(DIR)/table.db","P=$(PREFIX),Q=Table1,T=table1,M0X=m35,M0Y=m36,M1Y=m37,M2X=m38,M2Y=m39,M2Z=m40,GEOM=SRI")
#dbLoadRecords("$(DIR)/table.db","P=$(PREFIX),Q=Table1,T=table1,M0X=m35,M0Y=m36,M1Y=m37,M2X=m38,M2Y=m39,M2Z=m40,GEOM=NEWPORT")
#dbLoadRecords("$(DIR)/table.db","P=$(PREFIX),Q=Table2,T=table2,M0X=m1,M0Y=m2,M1Y=m3,M2X=m4,M2Y=m5,M2Z=m6,GEOM=SRI")

# Coarse/Fine stage
dbLoadRecords("$(OPTICS)/opticsApp/Db/CoarseFineMotor.db","P=$(PREFIX)cf1:,PM=$(PREFIX),CM=m33,FM=m34")

# monochromator
iocshLoad("$(OPTICS)/iocsh/kohzu_mono.iocsh", "PREFIX=$(PREFIX), M_THETA=m45,M_Y=m46,M_Z=m47, YOFF_LO=17.4999,YOFF_HI=17.5001, GEOM=1, LOG=kohzuCtl.log")

# add Slit2 (2slit_soft.vdb): m53-m56
dbLoadRecords("$(OPTICS)/opticsApp/Db/2slit_soft.vdb","P=$(PREFIX),SLIT=Slit2V,mXp=m53,mXn=m54,PAIRED_WITH=Slit2H")
dbLoadRecords("$(OPTICS)/opticsApp/Db/2slit_soft.vdb","P=$(PREFIX),SLIT=Slit2H,mXp=m55,mXn=m56,PAIRED_WITH=Slit2V")



---
File: /settings.iocsh
---

# Shell prompt
epicsEnvSet("IOCSH_PS1", "$(IOC)> ")

# prefix used for all PVs in this IOC
epicsEnvSet("PREFIX", $(PREFIX=gp:))

#For devIocStats
epicsEnvSet("ENGINEER", "engineer")
epicsEnvSet("LOCATION", "location")
epicsEnvSet("GROUP", "group")

# search path for database files
# epicsEnvSet("EPICS_DB_INCLUDE_PATH", "$(DEVIOCSTATS)/db")

# search path for streamDevice protocol files
epicsEnvSet("STREAM_PROTOCOL_PATH", ".")

# search path for lua scripts
# epicsEnvSet("LUA_SCRIPT_PATH", "./scripts")

# Specify largest array CA will transport
# Note for N doubles, need N*8 bytes+some overhead
epicsEnvSet("EPICS_CA_MAX_ARRAY_BYTES", 64010)



---
File: /st.cmd.Linux
---

# Linux startup script

< envPaths

# Increase size of buffer for error logging from default 1256
errlogInit(20000)

################################################################################
# Tell EPICS all about the record types, device-support modules, drivers,
# etc. in the software we just loaded (gp.munch)
dbLoadDatabase("../../dbd/iocgpLinux.dbd")
iocgpLinux_registerRecordDeviceDriver(pdbbase)

< settings.iocsh
< common.iocsh
< general_purpose.iocsh
< std.iocsh
< optics.iocsh
< motors.iocsh

#- devIocStats
dbLoadRecords("$(DEVIOCSTATS)/db/iocAdminSoft.db","IOC=$(PREFIX)")
#- PV aliases change :: into :
dbLoadRecords("$(TOP)/gpApp/Db/iocAdminSoft_aliases.db","P=$(PREFIX)")

###############################################################################
iocInit
###############################################################################

# write all the PV names to a local file
dbl > dbl-all.txt

# Diagnostic: CA links in all records
dbcar(0,1)

# print the time our boot was finished
date
#
# pre-assigned motors
< pre_assigned_motor_names.iocsh
#
# pre-assigned scaler channels
< pre_assigned_scaler_channel_names.iocsh


